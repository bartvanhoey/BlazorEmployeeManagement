@page "/crud"
@using EmployeeManagement.Client.Services
@using Syncfusion.Blazor.DropDowns
@using Action = Syncfusion.Blazor.Grids.Action

<PageTitle>Dropdown list from Database</PageTitle>

<div style="width:750px">
    <SfGrid @ref="EmployeeGrid" DataSource="@Employees" AllowPaging="true" Toolbar="@(new List<string>() { "Add", "Edit", "Update", "Delete", "Cancel" })">
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>
        <GridPageSettings PageSize="5"></GridPageSettings>
        <GridEvents OnActionBegin="ActonBeginHandler" TValue="Employee"></GridEvents>
        <GridColumns>
            <GridColumn AllowAdding="false" IsPrimaryKey="true" Field=@nameof(Employee.EmployeeId) HeaderText="ID"></GridColumn>
            <GridColumn Field=@nameof(Employee.FirstName) HeaderText="First Name"></GridColumn>
            <GridColumn Field=@nameof(Employee.LastName) HeaderText=" Last Name"></GridColumn>
            <GridColumn Field=@nameof(Employee.DateOfBrith) HeaderText="Date Of Birth"></GridColumn>
            <GridColumn Field="Department.DepartmentName" HeaderText="Department">
                <EditTemplate>
                    <SfDropDownList DataSource="@Departments" TItem="Department" TValue="int" @bind-Value="@((context as Employee).DepartmentId)">
                        <DropDownListFieldSettings Text="DepartmentName" Value="DepartmentId"></DropDownListFieldSettings>
                    </SfDropDownList>
                </EditTemplate>
            </GridColumn>
            <GridColumn Field=@nameof(Employee.Gender) HeaderText="Gender">
                <EditTemplate>
                    <SfDropDownList ID="Gender" TItem="string" TValue="Gender" @bind-Value="@((context as Employee).Gender)" DataSource="@_genderEnumValues">
                    </SfDropDownList>
                </EditTemplate>
            </GridColumn>
            <GridColumn Field=@nameof(Employee.Email) HeaderText="Email"></GridColumn>
        </GridColumns>
    </SfGrid>
</div>

@code{

    [Inject] IEmployeeService? EmployeeService { get; set; }
    [Inject] IDepartmentService? DepartmentService { get; set; }
    
    private SfGrid<Employee>? EmployeeGrid  { get; set; }

    private readonly string[] _genderEnumValues = Enum.GetNames(typeof(Gender));
    
    private List<Employee>? Employees { get; set; }
    private List<Department>? Departments { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeService!.GetEmployees()).ToList();
        Departments = (await DepartmentService!.GetDepartments()).ToList();
    }

    private async void ActonBeginHandler(ActionEventArgs<Employee?> args)
    {
        if (args is { RequestType: Action.Save, Action: "Add" })
        {
            await EmployeeService!.CreateEmployee(args.Data);
            Employees = (await EmployeeService!.GetEmployees()).ToList();
            EmployeeGrid?.Refresh();

        }
        else if (args.RequestType == Action.Save)
        {
            await EmployeeService!.UpdateEmployee(args.Data);
        }
        else if (args.RequestType == Action.Delete)
        {
            await EmployeeService!.DeleteEmployee(args.Data.EmployeeId);
        }
    }

}